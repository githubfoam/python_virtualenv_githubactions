name: "python virtualenv CI workflow ubuntu"


on:
  push:
    branches: [ test ]



jobs:

  ubuntu-2004-python3x-virtualenv:
    name: "Setting Up Python 3x virtualenv on ubuntu-20.04"
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2
    - name: "os fingerprinting"
      run: hostnamectl status 
    - name: "Setting Up Python 3x virtual environment (Pipenv)"
      run: |
        set -o errexit
        set -o pipefail
        set -o nounset
        set -o xtrace
        echo "=============Setting Up Virtualenv============="
        sudo apt-get update -qq
        whoami
        pwd && ls -lai
        python --version
        python -V
        python3 -V
        python2 -V
        #Installing virtualenv
        pip --version
        pip install virtualenv
        virtualenv --version
        virtualenv venv
        source venv/bin/activate
        pip install requests
        #create a requirements.txt file, which contains a simple list of all the packages in the current environment, and their respective versions
        pip freeze > requirements.txt
        #list of installed packages without the requirements
        pip list
        deactivate        
        python --version
        python -V
        python3 -V
        python2 -V   

  ubuntu-2004-python3x-virtualenv_0:
    name: "Setting Up Python 3x virtualenv on ubuntu-20.04"
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2
    - name: "os fingerprinting"
      run: hostnamectl status 
    - name: "Setting Up Python 3x virtual environment (Pipenv)"
      run: |
        set -o errexit
        set -o pipefail
        set -o nounset
        set -o xtrace
        echo "=============Setting Up Virtualenv============="
        sudo apt-get update -qq
        whoami
        pwd && ls -lai
        python --version
        python -V
        python3 -V
        python2 -V
        #Installing virtualenv
        pip --version
        pip install virtualenv
        virtualenv --version
        #use the Python interpreter of your choice (like python2.7)
        virtualenv -p /usr/bin/python2.7 venv        
        source venv/bin/activate
        pip install requests
        #create a requirements.txt file, which contains a simple list of all the packages in the current environment, and their respective versions
        pip freeze > requirements.txt
        #list of installed packages without the requirements
        pip list
        deactivate        
        python --version
        python -V
        python3 -V
        python2 -V   


  ubuntu-2004-python3x-virtualenv_1:
    name: "Setting Up Python 3x virtualenv on ubuntu-20.04"
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2
    - name: "os fingerprinting"
      run: hostnamectl status 
    - name: "Setting Up Python 3x virtual environment (Pipenv)"
      run: |
        set -o errexit
        set -o pipefail
        set -o nounset
        set -o xtrace
        echo "=============Setting Up Virtualenv============="
        sudo apt-get update -qq
        whoami
        pwd && ls -lai
        python --version
        python -V
        python3 -V
        python2 -V
        #Installing virtualenv
        pip --version
        pip install virtualenv
        virtualenv --version
        #change the interpreter globally with an env variable in ~/.bashrc
        export VIRTUALENVWRAPPER_PYTHON=/usr/bin/python2.7       
        source venv/bin/activate
        pip install requests
        #create a requirements.txt file, which contains a simple list of all the packages in the current environment, and their respective versions
        pip freeze > requirements.txt
        #list of installed packages without the requirements
        pip list
        deactivate        
        python --version
        python -V
        python3 -V
        python2 -V 


  ubuntu-2004-python3x-job_0:
    name: "Setting Up Python 3x on ubuntu-20.04"
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2
    - name: "os fingerprinting"
      run: hostnamectl status 
    - name: "Setting Up Python 3x virtual environment (python3-venv)"
      run: |
        set -o errexit
        set -o pipefail
        set -o nounset
        set -o xtrace
        echo "=============Setting Up a Python 3x Virtual Environment=="
        sudo apt-get update -qq
        whoami
        pwd && ls -lai
        python --version
        python -V
        python3 -V
        python2 -V
        sudo apt-get install -qqy python3-venv
        python3 -m venv my_env
        ls my_env
        source my_env/bin/activate
        python --version
        python -V
        python3 -V
        python2 -V
        pip install -r requirements.txt
        deactivate
        python --version
        python -V
        python3 -V
        python2 -V   

  ubuntu-2004-python3x-job_1:
    name: "Setting Up Python 3x on ubuntu-20.04"
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2
    - name: "os fingerprinting"
      run: hostnamectl status             
    - name: "Setting Up Python 3x virtual environment (source virtualenv)"
      run: |
        set -o errexit
        set -o pipefail
        set -o nounset
        set -o xtrace
        echo "=============Setting Up Python 3x Virtual Environment=="        
        sudo apt-get update -qq
        python --version
        python -V
        python3 -V
        python2 -V
        sudo pip3 install virtualenv
        virtualenv -p $(which python3) ~venvpy3
        source ~venvpy3/bin/activate
        python --version
        python2 -V
        python3 -V
        pip install -r requirements.txt
        deactivate
        python --version
        python -V
        python3 -V
        python2 -V   

  ubuntu-2004-python3x-job_2:
    name: "Setting Up Python 3x on ubuntu-20.04"
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2
    - name: "os fingerprinting"
      run: hostnamectl status  
    - name: "Setting Up Python 3x virtual environment (.virtualenv)"
      run: |
        set -o errexit
        set -o pipefail
        set -o nounset
        set -o xtrace
        echo "=============Setting Up Python 3x Virtual Environment=="
        sudo apt-get update -qq
        python --version
        python2 -V
        python3 -V
        sudo pip3 install virtualenv
        virtualenv .virtualenv
        . .virtualenv/bin/activate
        python --version
        python -V
        python3 -V
        python2 -V        
        pip install -r requirements.txt
        deactivate
        python --version
        python -V
        python3 -V
        python2 -V    

  ubuntu-2004-python3x-PPA-job:
    name: "Setting Up Python 3x on ubuntu-20.04"
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2
    - name: "os fingerprinting"
      run: hostnamectl status  
    - name: "Setting Up Python 3x virtual environment (.virtualenv)"
      run: |
        set -o errexit
        set -o pipefail
        set -o nounset
        set -o xtrace
        echo "=============Setting Up Python 3x Virtual Environment=="
        sudo apt-get update -qq
        python --version
        python2 -V
        python3 -V
        sudo pip3 install virtualenv
        virtualenv .virtualenv
        . .virtualenv/bin/activate
        python --version
        python -V
        python3 -V
        python2 -V        
        pip install -r requirements.txt
        echo "=============Add Deadsnakes PPA============="
        sudo add-apt-repository ppa:deadsnakes/ppa
        sudo apt-get update -qq
        sudo apt-get install python3.8 -qqy
        python ––version
        python -V
        python3 -V
        python2 -V   
        echo "=============Add Deadsnakes PPA============="   
        deactivate
        python --version
        python -V
        python3 -V
        python2 -V 

  ubuntu-2004-python3x-source-job:
    name: "Setting Up Python 3x on ubuntu-20.04"
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2
    - name: "os fingerprinting"
      run: hostnamectl status  
    - name: "Setting Up Python 3x virtual environment (.virtualenv)"
      run: |
        set -o errexit
        set -o pipefail
        set -o nounset
        set -o xtrace
        echo "=============Setting Up Python 3x Virtual Environment=="
        sudo apt-get update -qq
        python --version
        python2 -V
        python3 -V
        sudo pip3 install virtualenv
        virtualenv .virtualenv
        . .virtualenv/bin/activate
        python --version
        python -V
        python3 -V
        python2 -V        
        pip install -r requirements.txt
        echo "=============Install Python 3.8 From Source Code============="
        #Step 1: Update Local Repositories
        sudo apt-get update -qq
        #Step 2: Install Supporting Software
        sudo apt-get install build-essential zlib1g-dev libncurses5-dev libgdbm-dev libnss3-dev libssl-dev libreadline-dev libffi-dev wget -qqy
        #Step 3: Download the Latest Version of Python Source Code
        wget https://www.python.org/ftp/python/3.8.3/Python-3.8.3.tgz
        #Step 4: Extract Compressed Files
        tar –xf Python-3.8.3.tgz
        #Step 5: Test System and Optimize Python
        cd python-3.8.3
        #evaluates and prepares Python to install 
        #Using the ––optimization option speeds code execution by 10-20%
        ./configure ––enable–optimizations
        #Step 6: Install a Second Instance of Python (recommended)
        #create a second installation of Python 3.835, in addition to current Python installation,
        sudo make altinstall
        python ––version
        python -V
        python3 -V
        python2 -V   
        echo "=============Install Python 3.8 From Source Code=============" 
        deactivate
        python --version
        python -V
        python3 -V
        python2 -V 

  ubuntu-2004-python3x-source-overwrite-job:
    name: "Setting Up Python 3x on ubuntu-20.04"
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2
    - name: "os fingerprinting"
      run: hostnamectl status  
    - name: "Setting Up Python 3x virtual environment (.virtualenv)"
      run: |
        set -o errexit
        set -o pipefail
        set -o nounset
        set -o xtrace
        echo "=============Setting Up Python 3x Virtual Environment=="
        sudo apt-get update -qq
        python --version
        python2 -V
        python3 -V
        sudo pip3 install virtualenv
        virtualenv .virtualenv
        . .virtualenv/bin/activate
        python --version
        python -V
        python3 -V
        python2 -V        
        pip install -r requirements.txt
        echo "=============Install Python 3.8 From Source Code============="
        #Step 1: Update Local Repositories
        sudo apt-get update -qq
        #Step 2: Install Supporting Software
        sudo apt-get install build-essential zlib1g-dev libncurses5-dev libgdbm-dev libnss3-dev libssl-dev libreadline-dev libffi-dev wget -qqy
        #Step 3: Download the Latest Version of Python Source Code
        wget https://www.python.org/ftp/python/3.8.3/Python-3.8.3.tgz
        #Step 4: Extract Compressed Files
        tar –xf Python-3.8.3.tgz
        #Step 5: Test System and Optimize Python
        cd python-3.8.3
        #evaluates and prepares Python to install 
        #Using the ––optimization option speeds code execution by 10-20%
        ./configure ––enable–optimizations        
        #Overwrite Default Python Installation 
        sudo make install
        python ––version
        python -V
        python3 -V
        python2 -V   
        echo "=============Install Python 3.8 From Source Code=============" 
        deactivate
        python --version
        python -V
        python3 -V
        python2 -V 

  ubuntu-2004-python2x-job_0:
    name: "Setting Up Python 2x on ubuntu-20.04"
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2
    - name: "os fingerprinting"
      run: hostnamectl status 
    - name: "Setting Up Python 2x virtual environment (source virtualenv)"
      run: |
        set -o errexit
        set -o pipefail
        set -o nounset
        set -o xtrace
        echo "=============Setting Up Python 2x Virtual Environment=="
        sudo apt-get update -qq
        python --version
        python -V
        python3 -V
        python2 -V 
        sudo pip install virtualenv
        virtualenv -p $(which python2) ~venvpy2
        source ~venvpy2/bin/activate
        python --version
        pip install -r requirements.txt         
        deactivate
        python --version
        python -V
        python3 -V
        python2 -V

  ubuntu-2004-python2x-job_1:
    name: "Setting Up Python 2x on ubuntu-20.04"
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2
    - name: "os fingerprinting"
      run: hostnamectl status 
    - name: "Setting Up Python 2x virtual environment (.virtualenv)"
      run: |
        set -o errexit
        set -o pipefail
        set -o nounset
        set -o xtrace
        echo "=============Setting Up Python 2x Virtual Environment=="
        sudo apt-get update -qq
        python --version
        python -V
        python3 -V
        python2 -V 
        sudo pip install virtualenv
        virtualenv .virtualenv
        . .virtualenv/bin/activate
        python --version
        pip install -r requirements.txt         
        deactivate
        python --version
        python -V
        python3 -V
        python2 -V        